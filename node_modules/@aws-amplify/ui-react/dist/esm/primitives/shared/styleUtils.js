import{__rest as o}from"../../node_modules/tslib/tslib.es6.js";import*as n from"react";import{ComponentPropsToStylePropsMap as t}from"../types/style.js";import{getValueAtCurrentBreakpoint as r}from"./responsive/utils.js";import{useBreakpoint as e}from"./responsive/useBreakpoint.js";import"../../components/ThemeProvider/AmplifyContext.js";import{useTheme as i}from"../../hooks/useTheme.js";import{isNullOrEmptyString as a,isEmptyString as s}from"./utils.js";const l=t=>{const{rowSpan:r,columnSpan:e,row:i,column:s}=t,l=o(t,["rowSpan","columnSpan","row","column"]),{rowFromSpanValue:p,columnFromSpanValue:m}=n.useMemo((()=>({rowFromSpanValue:c(r),columnFromSpanValue:c(e)})),[r,e]);return Object.assign({row:a(i)?p:i,column:a(s)?m:s},l)},p=(o,t)=>{const{breakpoints:{values:r,defaultBreakpoint:a}}=i(),s=e({breakpoints:r,defaultBreakpoint:a}),p=l(o);return n.useMemo((()=>g({props:p,style:t,breakpoint:s,breakpoints:r})),[p,t,r,s])},m=o=>"auto"===o||"number"==typeof o&&!isNaN(o)||"string"==typeof o&&!isNaN(parseFloat(o)),c=o=>{if(m(o))return d(o);if(Array.isArray(o))return o.map((o=>d(o)));if("object"==typeof o&&null!=o){const n={};return Object.entries(o).forEach((([o,t])=>{n[o]=d(t)})),n}return null},d=o=>"auto"===o?"auto":`span ${o}`,g=({props:o={},style:n={},breakpoint:e,breakpoints:i})=>{const a={};return Object.keys(o).filter((n=>null!=o[n])).forEach((l=>{if(l in t){if(!s(o[l])){let a=o[l];a=r(a,e,i,l);const s=t[l];n=Object.assign(Object.assign({},n),{[s]:a})}}else a[l]=o[l]})),{propStyles:n,nonStyleProps:a}},u={alignContent:!0,alignItems:!0,direction:!0,gap:!0,justifyContent:!0,wrap:!0,columnGap:!0,rowGap:!0},f={alignSelf:!0,area:!0,backgroundColor:!0,backgroundImage:!0,basis:!0,border:!0,borderRadius:!0,bottom:!0,boxShadow:!0,color:!0,column:!0,columnEnd:!0,columnSpan:!0,columnStart:!0,display:!0,flex:!0,fontFamily:!0,fontSize:!0,fontStyle:!0,fontWeight:!0,grow:!0,height:!0,left:!0,letterSpacing:!0,lineHeight:!0,margin:!0,marginBlock:!0,marginBlockEnd:!0,marginBlockStart:!0,marginBottom:!0,marginInline:!0,marginInlineEnd:!0,marginInlineStart:!0,marginLeft:!0,marginRight:!0,marginTop:!0,maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0,opacity:!0,order:!0,overflow:!0,padding:!0,paddingBlock:!0,paddingBlockEnd:!0,paddingBlockStart:!0,paddingBottom:!0,paddingInline:!0,paddingInlineEnd:!0,paddingInlineStart:!0,paddingLeft:!0,paddingRight:!0,paddingTop:!0,position:!0,right:!0,row:!0,rowEnd:!0,rowSpan:!0,rowStart:!0,shrink:!0,textAlign:!0,textDecoration:!0,textTransform:!0,top:!0,transform:!0,transformOrigin:!0,width:!0,whiteSpace:!0},S=o=>{const n={flexContainerStyleProps:{},baseStyleProps:{},rest:{}};return Object.keys(o).forEach((t=>{t in u?n.flexContainerStyleProps[t]=o[t]:t in f?n.baseStyleProps[t]=o[t]:n.rest[t]=o[t]})),n};export{c as convertGridSpan,g as convertStylePropsToStyleObj,d as getGridSpan,m as isSpanPrimitiveValue,S as splitPrimitiveProps,p as useStyles,l as useTransformStyleProps};
